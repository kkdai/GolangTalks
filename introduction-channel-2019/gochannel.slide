Introducing the go channel and pipeline 
buffered/unbuffered channel

Golang Taipei Meetup 
July 2019
Tags: golang, present

Evan Lin
Technical Evangelist, LINE
evanslin@gmail.com
http://www.evanlin.com/
@Evan_Lin


* About Me
- [[http://golang.tw][Golang.TW]] Co-Orgnizer
- Technical Evangelist@ LINE
- LINE Developer Relations

* Why we need channels on data pipeline
.image pipeline1.jpg 400 1000

* Why we need channels on data pipeline(2)
.image pipeline2.jpg 400 1000

* Why we need channels on data pipeline(3)
.image pipeline3.jpg 400 1000

* Agenda
- Introduce Unbuffered/Buffered channels
- Channels in pipeline
- How to use channel in Fan-in / Fan-out
- Use go-kit for data pipeline with channel

* Go Channel
.image go-channel.jpg 480 900

* Go Channel - basic
.play channel-basic.go /^func main/,/^}/
- Send to unbuffered channel without use it on main func, will cause panic.
.image go-panic.jpg 260 260
 
* Go Channel - basic (2)
.play channel-basic2.go /^func main/,/^}/
- Send to closed channel cause panic.
.image go-close-channel.jpg 260 360


* Go Channel - Unbuffered Channels
.play -edit simple-channel.go


* Buffered Channel 
.play -edit buffered-channel-1.go

* Buffered Channel - Iteration
- What's the problem?
.play -edit buffered-channel-2-error.go


* Buffered Channel - Iteration
- Solution: Close it to avoid deadlock
.play -edit buffered-channel-3.go



* Go Pipeline 
.image gopher-pipeline.png 400 800


* Go Pipeline 
.code pipeline.go /^func gen/,/^}/


* Go Pipeline 
.code pipeline.go /^func sq/,/^}/


* Go Pipeline 
.play pipeline.go /^func main/,/^}/
.link https://play.golang.org/p/Zerr7phrGqn


* Go Fan-in
.image fanin.jpg 400 800


* Go Fan-in 
.code fan-in-out.go /^func merge/,/^}/


* Go Fan-out 
.code fan-in-out.go /^func sq/,/^}/


* Go Fan-in / Fan-out
.play fan-in-out.go /^func main/,/^}/
.link https://play.golang.org/p/VoZdosxo9AR


* Go Fan-in / Fan-out (diagram)
.image pipeline.png 500 1000



* Go Fan-in / Fan-out with buffered channel
.code fan-in-out-buffer.go /^func gen/,/^}/
.play fan-in-out-buffer.go /^func main/,/^}/
.link https://play.golang.org/p/nyxdZWcR3gJ


* Explicit cancellation (Merge)
.code faninout-stop.go /^func merge/,/^}/

* Explicit cancellation (Main)
.play -edit faninout-stop.go /^func main/,/^}/
.link https://play.golang.org/p/Zwy6mZgWvE9


* Use Go-Kit endpoint for pipeline

* Go-Kit (Endpoint)
.code go-kit.go /^func annotate/,/^}/
.code go-kit.go /^func myEndpoint/,/^}/
.link https://github.com/go-kit/kit/blob/master/endpoint/endpoint_example_test.go

* Go-Kit (Endpoint) How to use it
.code go-kit.go /^func main/,/^}/
.link https://play.golang.org/p/_WDD1L6RwJT


* FYI: Go playground support 3rd party import since May 2019, 
.image playground.jpg 500 700
.link https://twitter.com/bradfitz/status/1128069715455123457


* Advanced: Combine Go-Kit with Buffered channel

* Go-Kit + Buffered Channel: Define Middleware()
.code gokit-channel.go /^func readImages/,/^}/


* Go-Kit + Buffered Channel: How to use it.
.code gokit-channel.go /^func ImagePreprocessingPipeline/,/^}/


* Q&A

- Go Concurrency Patterns: Pipelines and cancellation
.link https://blog.golang.org/pipelines
- Advanced Go Concurrency Patterns
.link https://blog.golang.org/advanced-go-concurrency-patterns
- Understanding Channels
.link https://about.sourcegraph.com/go/understanding-channels-kavya-joshi
.link https://www.youtube.com/watch?v=KBZlN0izeiY

* LINE is hiring Go developers ( LINE SPOT )
.image spot.png 400 1000
- Build our micro-services on the Kubernetes (KAAS: Kubernetes As An Services).
- Building a great location based services.